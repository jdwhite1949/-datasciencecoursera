getwd()
install.packages("ggplot2")
q()
getwd()
setwd("E:/MGT 631 Data Analytics/Working Directory")
setwd("E:/MGT 631 Data Analytics/Working Directory")
getwd()
read.csv("foo.csv")
readLines()
getwd()
setwd("C:/Users/James/Desktop/Coursera/DataScience/Repositories/Statistical Inference")
getwd()
?expression
expression(alpha + beta)
?plotmath
print(expression(alpha, omega))
\( \alpha \ A \)
\alpha A
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(paste($lambda$,"1"), "Lambda=2", "Lambda=3"), col = c("red", "green", "blue"), pch = 1, cex = .75)
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c("$\lambda$1"), "Lambda=2", "Lambda=3"), col = c("red", "green", "blue"), pch = 1, cex = .75)
rm(list = ls())
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c("Lambda-1", "Lambda=2", "Lambda=3"), col = c("red", "green", "blue"), pch = 1, cex = .75)
rm(list = ls())
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), pch = 1, cex = .75)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]+" "), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1])+" ", expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(paste(expression(lambda[1], " ")), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
?legend
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), inset = .05, pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = "Calculated y Value")
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x;$\lambda$)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 2.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x;lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 2.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x:lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 2.0)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(1,3,1,1))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x;lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(1,3,1,1))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x[;]lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environmen
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(1,3,1,1))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x//;lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(1,3,1,1))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x%;%lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(3,5,2,2))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x%;%lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(5,5,2,2))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x%;%lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(5,5,2,2))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "Random x Value", ylab = expression(f(x,lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(5,5,2,2))
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "x Value", ylab = expression(f(x,lambda)))
axis(2, cex.axis = 2)
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
?axis
?par
set.seed(1) # to ensure reproducibility
# randomly select values for x
x <- runif(100, 0, 5)
# set lambda values and calculate respective y values
lambda <- 1
while(lambda <= 3){
#Calculate the y values
assign(paste("y", lambda, sep = ""),
lambda*exp(-lambda*x))
lambda <- lambda + 1
}
# plot the three x.y groups as points
par(mar=c(5,5,2,2), cex.lab=1.5)
plot(x, y1, type = "p", col = "red", main = "Exponential Distribution",
xlab = "x Value", ylab = expression(f(x,lambda)))
points(x, y2, col = "green")
points(x, y3, col = "blue")
legend("topright", c(expression(lambda[1]), expression(lambda[2]), expression(lambda[3])), col = c("red", "green", "blue"), bty = "n", inset = .05, pch = 1, cex = 1.5)
rm(list = ls()) #clean up environment
set.seed(10)  # set seed for randomization for reproducibility
lambda <- 0.2  # set value of constant lambda
sample_size <- 40  # set sample size
sim <- 1000
sim_means <- replicate(sim, rexp(sample_size, lambda))
hist(sim_means)
set.seed(10)  # set seed for randomization for reproducibility
lambda <- 0.2  # set value of constant lambda
sample_size <- 40  # set sample size
sim <- 1000  # set number of simulations to run
sim_means <- replicate(sim, mean(rexp(sample_size, lambda)))
hist(sim_means)
set.seed(5)  # set seed for randomization for reproducibility
lambda <- 0.2  # set value of constant lambda
sample_size <- 40  # set sample size
sim <- 1000  # set number of simulations to run
sim_means <- replicate(sim, mean(rexp(sample_size, lambda)))
hist(sim_means)
mean(sim_means)
1/.2
sd(sim_means)
?sd
var(sim_means)
sim_sd <- replicate(sim, sd(rexp(sample_size, lambda)))
mean(sim_sd)
plot(density(sim_means))
shapiro.test(sim_means)
rm(list = ls())
q()
